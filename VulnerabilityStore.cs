using System;
using System.Collections.Generic;
using System.IO;

namespace containersec
{
    public static class VulnerabilityStore
    {
        public static bool Save(DirectoryInfo dir, ImageInfo image, List<Vulnerability> vulnerabilities)
        {
            var date = DateTime.Now;
            var dateformat = $"{date.Year}-{date.Month}-{date.Day}";
            var cleanDigest = image.Digest.Replace(':','_');
            var filename = $"{cleanDigest}.txt";
            var file = Path.Combine(dir.FullName,filename);

            if (!dir.Exists)
            {
                dir.Create();
            }

            if (File.Exists(file))
            {
                return false;
            }

            using(var filestream = new StreamWriter(file))
            {
                filestream.WriteLine(dateformat);
                filestream.WriteLine(image.Digest);
                filestream.WriteLine(image.Tag);
                filestream.WriteLine(image.TimeStamp);
                foreach (var vulnerability in vulnerabilities)
                {
                    filestream.WriteLine(vulnerability.vuln);
                }
            }

            return true;        
        }

        public static List<string> LoadVulnerabilitiesForDigest(DirectoryInfo dir, ImageInfo image)
        {
            var cleanDigest = image.Digest.Replace(':', '_');
            var filename = $"{cleanDigest}.txt";
            var file = Path.Combine(dir.FullName, filename);
            var vulnerabilities = new List<string>();
            var line = string.Empty;
            var streamreader = new StreamReader(file);

            while ((line = streamreader.ReadLine() ) != null)
            {
                if (line.StartsWith("CVE"))
                {
                    vulnerabilities.Add(line);
                }
            }
            return vulnerabilities;
        }
    }   
}